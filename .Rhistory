sum <- 0.0
n <- 0
for (a in seq_along(id)) {
if (a < 10) {name <- paste(directory,'00',a,sep="")}
else if (a < 100) {name <- paste(directory,'0',a,sep="")}
else {name <- paste(directory,a,sep="")}
`
x <- read.csv(name)[pollutant]
sum <- sum + lapply(x,sum,na.rm=TRUE)
n <- n + sum(!is.na(x))
}
}
}}}}}
}}}}}}}}}}}
q
)
}
;
;;
#
]
id <- 1:5
sum <- 0.0
n <- 0
for (a in seqalong(id)) {}
for (a in seq_along(id)) {}
for (a in seq_along(id)) {if (a<10) {name<-paste('00',a,sep="")} else if (a<100) {name <- paste("0",a,sep="")} else {name <- a}}
for (a in seq_along(id)) {
if (a < 10) {name <- paste(directory,'00',a,'.csv',sep="")}
else if (a < 100) {name <- paste(directory,'0',a,'.csv',sep="")}
else {name <- paste(directory,'.csv',a,sep="")}
`
x <- read.csv(name)[pollutant]
sum <- sum + lapply(x,sum,na.rm=TRUE)
n <- n + sum(!is.na(x))}
end
q
q()
a <- 10
if (a < 10) {name <- paste(directory,'00',a,'.csv',sep="")}
else if (a < 100) {name <- paste(directory,'0',a,'.csv',sep="")}
else {name <- paste(directory,'.csv',a,sep="")}
`
x <- read.csv(name)[pollutant]
sum <- sum + lapply(x,sum,na.rm=TRUE)
n <- n + sum(!is.na(x))
setwd("~/Desktop/MLA_Learn/China COllege Entrance Exam/Chinese_University_Entrance_Ranking_GD")
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
Pro <- unique(Dataset["Province"])
Year <- unique(Dataset["Year"])
University <- unique(Dataset["University_Name"])
Topic <- unique(Dataset["Topic"])
DF <- Dataset[,c("Province","Year","Plan_Number")]
PlanProvince <- aggregate(DF$Plan_Number,by=list(DF$Province,DF$Year),FUN=sum)
colnames(PlanPopulation) <- c("Province","Year","Plan_to_enroll")
plot_ly(x = PlanProvince$Province,y = PlanProvince$Plan_to_enroll,type="bar",color = PlanProvince$Year)
if(FALSE) {
Science <- Dataset[Dataset$Topic == "理科",]
set.seed(1992912)
inTrain <- createDataPartition(y = Science$X,p=0.7,list=FALSE)
Training <- Science[inTrain,]
Testing <- Science[-inTrain,]
mod <- train(Lowest_Ranking ~ ., method='rf',data=Training)
pre <- predict(mod,newdata=Testing)
performance <- confusionMatrix(pre,Testing$class)
}
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
Pro <- unique(Dataset["Province"])
Year <- unique(Dataset["Year"])
University <- unique(Dataset["University_Name"])
Topic <- unique(Dataset["Topic"])
DF <- Dataset[,c("Province","Year","Plan_Number")]
PlanProvince <- aggregate(DF$Plan_Number,by=list(DF$Province,DF$Year),FUN=sum)
colnames(PlanProvince) <- c("Province","Year","Planned_Quantity_for_enrolling")
NoGD <- PlanProvince[PlanProvince$Province!=PlanProvince$Province[9],]
ggplot(NoGD,aes(x=Province,y=Plan_to_enroll,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
if(FALSE) {
Science <- Dataset[Dataset$Topic == "理科",]
set.seed(1992912)
inTrain <- createDataPartition(y = Science$X,p=0.7,list=FALSE)
Training <- Science[inTrain,]
Testing <- Science[-inTrain,]
mod <- train(Lowest_Ranking ~ ., method='rf',data=Training)
pre <- predict(mod,newdata=Testing)
performance <- confusionMatrix(pre,Testing$class)
}
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
Pro <- unique(Dataset["Province"])
Year <- unique(Dataset["Year"])
University <- unique(Dataset["University_Name"])
Topic <- unique(Dataset["Topic"])
DF <- Dataset[,c("Province","Year","Plan_Number")]
PlanProvince <- aggregate(DF$Plan_Number,by=list(DF$Province,DF$Year),FUN=sum)
colnames(PlanProvince) <- c("Province","Year","Planned_Quantity_for_enrolling")
NoGD <- PlanProvince[PlanProvince$Province!=PlanProvince$Province[9],]
ggplot(NoGD,aes(x=Province,y=Planned_Quantity_for_enrolling,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
if(FALSE) {
Science <- Dataset[Dataset$Topic == "理科",]
set.seed(1992912)
inTrain <- createDataPartition(y = Science$X,p=0.7,list=FALSE)
Training <- Science[inTrain,]
Testing <- Science[-inTrain,]
mod <- train(Lowest_Ranking ~ ., method='rf',data=Training)
pre <- predict(mod,newdata=Testing)
performance <- confusionMatrix(pre,Testing$class)
}
GD <- PlanProvince[PlanProvince$Province==PlanProvince$Province[9],]
plot(GD)
GD
ggplot(GD,axs(x=Year,y=Planned_Quantity_for_enrolling))
ggplot(GD,aex(x=Year,y=Planned_Quantity_for_enrolling))
ggplot(GD,aes(x=Year,y=Planned_Quantity_for_enrolling))
ggplot(GD,aes(x=Year,y=Planned_Quantity_for_enrolling)) + geom_bar()
ggplot(GD,aes(x=Year,y=Planned_Quantity_for_enrolling)) + geom_bar(stat="identity")
ggplot(NoGD,aes(x=Province,y=Planned_Quantity_for_enrolling,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
Dataset <- read.csv("UniversityDataUsed.csv")
#Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
DF <- Dataset[,c("Province","Year","Plan_Number")]
PlanProvince <- aggregate(DF$Plan_Number,by=list(DF$Province,DF$Year),FUN=sum)
colnames(PlanProvince) <- c("Province","Year","Planned_Quantity_for_enrolling")
NoGD <- PlanProvince[PlanProvince$Province!=PlanProvince$Province[9],]
ggplot(NoGD,aes(x=Province,y=Planned_Quantity_for_enrolling,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
NoGD <- PlanProvince[PlanProvince$Province!=PlanProvince$Province[10],]
ggplot(NoGD,aes(x=Province,y=Planned_Quantity_for_enrolling,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
GD <- PlanProvince[PlanProvince$Province==PlanProvince$Province[10],]
ggplot(GD,aes(x=Year,y=Planned_Quantity_for_enrolling)) + geom_bar(stat="identity")
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
#Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
DF <- Dataset[,c("Province","Year","Plan_Number")]
PlanProvince <- aggregate(DF$Plan_Number,by=list(DF$Province,DF$Year),FUN=sum)
colnames(PlanProvince) <- c("Province","Year","Planned_Quantity_for_enrolling")
NoGD <- PlanProvince[PlanProvince$Province!=PlanProvince$Province[10],]
ggplot(NoGD,aes(x=Province,y=Planned_Quantity_for_enrolling,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
GD <- PlanProvince[PlanProvince$Province==PlanProvince$Province[10],]
ggplot(GD,aes(x=Year,y=Planned_Quantity_for_enrolling)) + geom_bar(stat="identity")
Eco <- unique(cbind(Dataset[,c("Year","Province")],Dataset$GDP / Dataset$Population))
colnames(Eco) <- c("Year","Province","GDP_Per")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="dodge")
Eco <- unique(cbind(Dataset[,c("Year","Province")],Dataset$GDP / Dataset$Population))
colnames(Eco) <- c("Year","Province","GDP_Per")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity",aes(order=desc(as.factor(Year))))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=desc(as.factor(Year)),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=~as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=-as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(-Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=rev(as.factor(Year)),width=0.8)) + geom_bar(stat="identity", position="identity")
T <- factor(Eco$Year,levels = rev(levels(Eco$Year)))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year*-1),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=reverse(as.factor(Year)),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="stack")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="idensity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(！Year),width=0.8)) + geom_bar(stat="identity",position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=！as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=！as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")+guides(fill=guide_legend(reverse = TRUE))
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity", position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity"）
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity"）
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="stack")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")
ggplot(Eco,aes(x=Province,y=GDP_Per,fill=as.factor(Year-2010),width=0.8)) + geom_bar(stat="identity",position="identity")
ggplot(Eco[nrow(Eco):1,],aes(x=Province,y=GDP_Per,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")
colnames(Eco) <- c("Year","Province","GDP_Per_Person")
ggplot(Eco[nrow(Eco):1,],aes(x=Province,y=GDP_Per_Person,fill=as.factor(Year),width=0.8)) + geom_bar(stat="identity",position="identity")
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
#Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
DF <- Dataset[,c("Province","Year","Plan_Number")]
UniversityNumber <- Dataset[,c("Province","Year")]
F <- table(UniversityNumber)
Freq <- as.data.frame(F)
Total <- aggregate(Freq$Freq,by=list(Freq$Year),FUN=sum)
ggplot(Freq[Freq$Year==2010,],aes(x="",y=Freq,fill=Province))+ coord_polar("y")+geom_bar(stat="identity",width=1)
ggplot(Freq[Freq$Year==2014,],aes(x="",y=Freq,fill=Province))+ coord_polar("y")+geom_bar(stat="identity",width=1)
library(caret)
library(plotly)
Dataset <- read.csv("UniversityDataUsed.csv")
#Dataset <- Dataset[!is.na(Dataset$Lowest_Ranking),]
Dataset[,7] <- as.numeric(Dataset[,7])
DF <- Dataset[,c("Province","Year","Plan_Number")]
UniversityNumber <- Dataset[,c("Province","Year")]
F <- table(UniversityNumber)
Freq <- as.data.frame(F)
Total <- aggregate(Freq$Freq,by=list(Freq$Year),FUN=sum)
ggplot(Freq,aes(x=Province,y=Freq,fill=Year))+ geom_bar(stat="identity",position="dodge",width=1)
ggplot(Freq,aes(x=Province,y=Freq,fill=Year))+ geom_bar(stat="identity",position="dodge",width=0.8)
